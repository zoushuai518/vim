"==========================================
" bundle 插件管理和配置项
"==========================================
"------------------------------------------- begin of configs --------------------------------------------
"last modify 2014-08-21
"zs备注：
"插件管理还有很多问题需要研究;
"插件管理,区别与传统的vim插件安装方式,但也可以 cp覆盖操作;插件只不过是,对vim集中管理安装,更新,加载而已


"################### 包依赖 #####################
"package dependence:  ctags
"python dependence:  pep8, pyflake
"
"非兼容vi模式。去掉讨厌的有关vi一致性模式，避免以前版本的一些bug和局限
set nocompatible
" configure Vundle
filetype off " required! turn off
set rtp+=~/.vim/bundle/vundle/
call vundle#rc()


"################### 插件管理 ###################

"使用Vundle来管理插件
" vim plugin bundle control, command model
" :BundleInstall     install 安装配置的插件
" :BundleInstall!    update  更新
" :BundleClean       remove plugin not in list 删除本地无用插件
" :BundleUpdate		 更新插件
" :BundleClean		 清除不再使用的插件
" :BundleList		 列出所有插件
" :BundleSearch		 查找插件
"
" zs备注:
"git clone https://github.com/gmarik/Vundle.vim.git ~/.vim/bundle/vundle
" Vundle分为三类：
" 在Github vim-scripts 用户下的repos,只需要写出repos名称
" 在Github其他用户下的repos, 需要写出"用户名/repos名"
" 不在Github上的插件，需要写出git全路径
" -
" demo:
" " original repos on github （Github网站上非vim-scripts仓库的插件，按下面格式填写）
" Bundle 'tpope/vim-fugitive'
" Bundle 'Lokaltog/vim-easymotion'
" Bundle 'rstacruz/sparkup', {'rtp': 'vim/'}
" Bundle 'tpope/vim-rails.git'
"
" " vim-scripts repos （vim-scripts仓库里的，按下面格式填写）
" Bundle 'L9'
" Bundle 'FuzzyFinder'
"
" " non github repos （非上面两种情况的，按下面格式填写）
" Bundle 'git://git.wincent.com/command-t.git'

" 使用 Bundle 插件安装在 ~./vim/Bundle/目录下
"
"
" 参考：
" https://github.com/gmarik/Vundle.vim
" http://zuyunfei.com/2013/04/12/killer-plugin-of-vim-vundle/
" http://jianshu.io/p/mHUR4e
" http://www.cnblogs.com/merryfreespace/p/3438128.html
" http://www.cnblogs.com/xia520pi/archive/2014/04/11/3659386.html
Bundle 'gmarik/vundle'


"################### 基础 ######################

" 多语言语法检查
"Bundle 'scrooloose/syntastic'
"let g:syntastic_error_symbol='>>'
"let g:syntastic_warning_symbol='>'
"let g:syntastic_check_on_open=1
"let g:syntastic_enable_highlighting = 0
""let g:syntastic_python_checker="flake8,pyflakes,pep8,pylint"
"let g:syntastic_python_checkers=['pyflakes'] " 使用pyflakes,速度比pylint快
"let g:syntastic_javascript_checkers = ['jsl', 'jshint']
"let g:syntastic_html_checkers=['tidy', 'jshint']
"highlight SyntasticErrorSign guifg=white guibg=black

"autocmd FileType python set omnifunc=pythoncomplete#Complete  
"autocmd FileType javascrīpt set omnifunc=javascrīptcomplete#CompleteJS  
"autocmd FileType html set omnifunc=htmlcomplete#CompleteTags  
"autocmd FileType css set omnifunc=csscomplete#CompleteCSS  
"autocmd FileType xml set omnifunc=xmlcomplete#CompleteTags  
"autocmd FileType php set omnifunc=phpcomplete#CompletePHP  
"autocmd FileType c set omnifunc=ccomplete#Complete 

"################### php config ######################
"php缩进
let PHP_autoformatcomment=1

autocmd FileType php set omnifunc=phpcomplete#CompletePHP
set ofu=syntaxcomplete#Complete

"php语法检查
setlocal makeprg=\/usr/bin/php\ -l\ -n\ -d\ html_errors=off\ %
setlocal errorformat=%m\ in\ %f\ on\ line\ %l
"autocmd BufWritePost *.php,*.phps :make
"map :w:noh:make

"Disable phpsyntax based indenting for .php files
au BufRead,BufNewFile *.php             set indentexpr= | set smartindent
au BufRead,BufNewFile *.phps            set filetype=php


"################### php.vim php语法高亮插件,新版本vim已经集成 ######################
Bundle 'jqlblue/php-vim'


"################### txt.vim ######################
" 高亮显示普通txt文件（需要txt.vim脚本） 
"au BufRead,BufNewFile * setfiletype txt 


"################### snipMate ######################
Bundle 'msanders/snipmate.vim'


"################### powerline 旧版状态栏增强插件 ######################
"Bundle 'Lokaltog/vim-powerline'
"set guifont=PowerlineSymbols\ for\ Powerline
"set nocompatible
"set t_Co=256
"let g:Powerline_symbols = 'fancy'


"################### vim-airline 新版状态栏增强插件 ######################
Bundle 'bling/vim-airline'
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#left_sep = ' '
let g:airline#extensions#tabline#left_alt_sep = '|'
":help airline


"################### php assistant | php语法增强插件 ######################
"Ctrl + k,查看函数如何使用
Bundle 'assistant'


"################### minibufexpl.vim 多文件编辑 ######################
Bundle 'fholgado/minibufexpl.vim'
let g:miniBufExplMapWindowNavVim = 1
let g:miniBufExplMapWindowNavArrows = 1
let g:miniBufExplMapCTabSwitchBufs = 1
let g:miniBufExplModSelTarget = 1
"解决FileExplorer窗口变小问题
let g:miniBufExplForceSyntaxEnable = 1
let g:miniBufExplorerMoreThanOne=2
let g:miniBufExplCycleArround=1


"################### trinity.vim集成了 NERD_tree.vim SrcExpl.vim taglist.vim三个插件 ######################
""Bundle 'trinity.vim'
"Bundle 'Trinity'
"Bundle 'SrcExpl'
"
"" Open and close all the three plugins on the same time
"nmap <F8>   :TrinityToggleAll
"" Open and close the srcexpl.vim separately 
"nmap <F9>   :TrinityToggleSourceExplorer
"" Open and close the taglist.vim separately 
"nmap <F10>  :TrinityToggleTagList
"" Open and close the NERD_tree.vim separately 
"nmap <F11>  :TrinityToggleNERDTree


"################### NERT_Tree 目录树插件 ######################
Bundle 'scrooloose/nerdtree'
"map <F1> :NERDTreeToggle
""map <C-F1> :NERDTreeFind
let NERDTreeChDirMode=2  "选中root即设置为当前目录
""let NERDTreeQuitOnOpen=1 "打开文件时关闭树
let NERDTreeShowBookmarks=1 "显示书签
""let NERDTreeMinimalUI=1 "不显示帮助面板
let NERDTreeDirArrows=1 "目录箭头 1显示箭头  0传统+-|号
""map <F3> :NERDTreeToggle
nmap ne :NERDTreeToggle		"ne快捷键


"################### taglist.vim 源码追踪,要配合 ctags  ######################
Bundle 'taglist.vim'
"let Tlist_Ctags_Cmd="/usr/bin/ctags"       "linux 下 ctags执行文件目录
"Taglist s
"map <silent> <leader>tl :TlistToogle<cr>
let Tlist_Auto_Highlight_Tag = 1
let Tlist_Auto_Open = 1
let Tlist_Auto_Update = 1
let Tlist_Close_On_Select = 0
let Tlist_Compact_Format = 0
let Tlist_Display_Prototype = 0
let Tlist_Display_Tag_Scope = 1
let Tlist_Enable_Fold_Column = 0
let Tlist_Exit_OnlyWindow = 0
let Tlist_File_Fold_Auto_Close = 0
let Tlist_GainFocus_On_ToggleOpen = 1
let Tlist_Hightlight_Tag_On_BufEnter = 1
let Tlist_Inc_Winwidth = 0
let Tlist_Use_Right_Window = 1
"map <F4> :TlistToggle<CR>     "F4快捷键,zs set
map tl :TlistToggle<CR>       "tl快捷键,

let Tlist_Show_One_File = 1            "不同时显示多个文件的tag，只显示当前文件的
let Tlist_Exit_OnlyWindow = 1          "如果taglist窗口是最后一个窗口，则退出vim
let Tlist_Use_Right_Window = 1         "在右侧窗口中显示taglist窗口
"map <silent> <F9> :TlistToggle<cr>
"Taglist e

"Ctags 生成的tags文件路径
set tags=/var/www/html/b5msite/cart/tags
" 增强检索功能
"set tags=./tags,./../tags,./**/tags
"use
"Ctrl + ] 跳转到源
"Ctrl + t 跳转到调用处


"################### solarized 主题 ######################
Bundle 'altercation/vim-colors-solarized'
set background=dark
colorscheme solarized
set t_Co=16
" 增强显示配置
"let g:solarized_termtrans=1
"let g:solarized_contrast="normal"
"let g:solarized_visibility="normal"


"################### neocomplcache 自动补全插件 ######################
Bundle 'neocomplcache'
let g:neocomplcache_enable_at_startup = 1


"################### Calendar 日历插件 ######################
"github地址: https://github.com/itchyny/calendar.vim
Bundle 'itchyny/calendar.vim'
let g:calendar_diary = "~/diary" " 设置日记的存储路径
let g:calendar_monday = 1 "以星期一为开始
let g:calendar_focus_today = 1 " 光标在当天的日期上
let g:calendar_mark = 'left-fit' "可以让*和数字可靠近
"use
":Calendar
":Calendar 2000 1 1
":Calendar -view=year
":Calendar -view=year -split=vertical -width=27
":Calendar -view=year -split=horizontal -position=below -height=12
":Calendar -first_day=monday
":Calendar -view=clock


